{
	// Place your app-inventory workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Basic Service Endpoint":{
		"scope": "javascript",
		"prefix": "app-service",
		"body": [
			"/**",
			"* @copyright ${CURRENT_YEAR}",
			"* - service endpoint for ${TM_FILENAME_BASE}",
			"*",
			"*",
			"*",
			"*",
			"**/",
			"import ApiClient from './apiClient.js'",
			"",
			"// endpoint for api endpoint ",
			"",
			"const $url=`${TM_FILENAME_BASE}`",
			"",
			"",
			"",
			"/**",
			"* get${TM_FILENAME_BASE}Resources",
			"*",
			"* - endpoint to get all ${TM_FILENAME_BASE} resource ",
			"* @param {Number} limit - limit resource to retrieve from backend",
			"* @param {Number} page - current page index for pagination",
			"* @async",
			"*",
			"*/",
			"export const get${TM_FILENAME_BASE}Resources=async($limit,$page)=>{",
			"       return await ApiClient.get(`/${$url}?limit=${$limit}&page=${$page}`)" ,
			"}",
			"",
			"",
			"/**",
			"* create${TM_FILENAME_BASE}Resource",
			"*",
			"* - endpoint to create new ${TM_FILENAME_BASE} resource ",
			"* @param {Object} payload - data object for resource",
			"* @async",
			"*",
			"*/",
			"export const create${TM_FILENAME_BASE}Resource=async($payload)=>{",
			"       return await ApiClient.post(`/${$url}`,$payload)" ,
			"}",
			"",
			"",
			"/**",
			"* get${TM_FILENAME_BASE}Resource",
			"*",
			"* - endpoint to take specific ${TM_FILENAME_BASE} resource ",
			"* @param {String} id",
			"* @async",
			"*",
			"*/",
			"export const get${TM_FILENAME_BASE}Resource=async($id)=>{",
			"       return await ApiClient.get(`/${$url}/${$id}`)" ,
			"}",
			"",
			"",
			"/**",
			"* update${TM_FILENAME_BASE}Resource",
			"*",
			"* - endpoint to update specific ${TM_FILENAME_BASE} resource ",
			"* @param {String} id - id of data resource",
			"* @param {Object} payload - data object for resource",
			"* @async",
			"*",
			"*/",
			"export const update${TM_FILENAME_BASE}Resource=async($id,$payload)=>{",
			"       return await ApiClient.put(`/${$url}/${$id}`,$payload)" ,
			"}",
			"",
			"",
			"/**",
			"* delete${TM_FILENAME_BASE}Resource",
			"*",
			"* - endpoint to delete specific ${TM_FILENAME_BASE} resource ",
			"* @param {String} id",
			"* @async",
			"*",
			"*/",
			"export const delete${TM_FILENAME_BASE}Resource=async($id)=>{",
			"       return await ApiClient.delete(`/${$url}/${$id}`)" ,
			"}",
		
		],
		"description": "Snippet for making basic crud endpoint | Silvester Wali",
	}
}