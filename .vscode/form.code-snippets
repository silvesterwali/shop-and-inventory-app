{
	"form vuetify":{
		"scope": "vue",
		"prefix": "app-form",
		"description": "snippet for code",
		"body": [
			"<template>",
			"  <v-form ref=\"form\" @submit.prevent=\"validateForm\" >",
			"    <v-row>",
			"       <!-- define your form input here-->",
			"      <v-col lg=\"12\" sm=\"12\" md=\"12\" >",
			"          <v-spacer />",
			"           <v-btn type=\"submit\" class=\"float-right\" color=\"primary\">{{dataForm._id==null?'Submit':'Update'}}</v-btn>",
			"       </v-col>",
			"    </v-row>",
			"  </v-form>",
			"</template>",
			"",
			"<script>",
			"",
			" import errorKey from '@/mixins/errorKey.js'",
			" import setMessage from '@/mixins/setMessage.js'",
			"",
			"export default {",
			"  mixins:[errorKey,setMessage],",
			"  props:{",
			"     // define your props update purpose",
			"     propsName:{",
			"         type:Object,",
			"         default:null",
			"      },",
			"     // define redirectUrl will redirect to destination after form execute",
			"     redirectUrl:{",
			"         type:String,",
			"         default:'/'",
			"      }",
			"   },",
			"  data(){",
			"      return {",
			"            dataForm:{",
			"                _id:null,",
			"                 // define the form property here",
			"             },",
			"            errors:null",
			"        }",
			"    },",
			" watch:{",
			"   // special props to change the dataForm for update",
			"   propsName:{",
			"       immediate:true,",
			"        handler(value){",
			"            if(value!==null){",
			"               this.dataForm=value",
			"            }",
			"        }",
			"     }",
			"  },",
			" methods:{",
			"    validateForm(){",
			"         this.errors=null ",
			"         if(!this.$$refs.form.validate()) return false",
			"         if(this.dataForm._id===null){",
			"            this.createResource()",
			"         }else{",
			"            this.updateResource()",
		    "         }",
			"     },",
			"     /**",
			"      * crateResource",
			"      * - send to create specific resource",
			"      * @async",
			"      **/",
			"     async createResource(){",
			"        try {",
			"           const {data}=await createResource(this.dataForm)",
			"           this.SET_MESSAGE({text:data.message,color:\"success\"})",
			"           this.$$router.push(this.redirectUrl)",
			"        } catch(err) {",
			"             this.errors(err)",
			"         }",
			"     },",
			"     /**",
			"      * updateResource",
			"      * - send to update specific resource",
			"      * @async",
			"      **/",
			"     async updateResource(){",
			"        try {",
			"           const {data}=await updateResource(this.dataForm._id,this.dataForm)",
			"           this.SET_MESSAGE({text:data.message,color:\"success\"})",
			"           this.$$router.push(this.redirectUrl)",
			"        } catch(err) {",
			"             this.errors(err)",
			"         }",
			"     }",
			"  }",
			"}",
			"</script>"
		]
	}
	
}